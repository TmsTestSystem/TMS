const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 55432,
  user: 'tms_user',
  password: 'tms_password',
  database: 'tms'
});

async function fixTestData() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...');
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    const projectsResult = await pool.query('SELECT id, name FROM projects WHERE is_deleted = FALSE');
    console.log('üìÅ –ü—Ä–æ–µ–∫—Ç—ã:', projectsResult.rows);
    
    if (projectsResult.rows.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return;
    }
    
    const projectId = projectsResult.rows[0].id;
    console.log('üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–µ–∫—Ç:', projectsResult.rows[0].name, 'ID:', projectId);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç-–ø–ª–∞–Ω—ã
    const testPlansResult = await pool.query('SELECT id, name, project_id FROM test_plans WHERE is_deleted = FALSE');
    console.log('üìã –¢–µ—Å—Ç-–ø–ª–∞–Ω—ã:', testPlansResult.rows);
    
    if (testPlansResult.rows.length === 0) {
      console.log('‚ùå –ù–µ—Ç —Ç–µ—Å—Ç-–ø–ª–∞–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return;
    }
    
    const testPlanId = testPlansResult.rows[0].id;
    console.log('üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç-–ø–ª–∞–Ω:', testPlansResult.rows[0].name, 'ID:', testPlanId);
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç-–∫–µ–π—Å—ã
    const testCasesResult = await pool.query('SELECT id, title, project_id, test_plan_id, section_id FROM test_cases WHERE is_deleted = FALSE LIMIT 10');
    console.log('üß™ –¢–µ—Å—Ç-–∫–µ–π—Å—ã:', testCasesResult.rows);
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–¥–µ–ª—ã
    const sectionsResult = await pool.query('SELECT id, name, project_id, parent_id FROM test_case_sections LIMIT 10');
    console.log('üìÇ –†–∞–∑–¥–µ–ª—ã:', sectionsResult.rows);
    
    // 5. –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ—Å—Ç-–∫–µ–π—Å—ã, –Ω–æ –æ–Ω–∏ –Ω–µ —Å–≤—è–∑–∞–Ω—ã —Å —Ç–µ—Å—Ç-–ø–ª–∞–Ω–æ–º, —Å–≤—è–∑—ã–≤–∞–µ–º –∏—Ö
    if (testCasesResult.rows.length > 0) {
      console.log('üîó –°–≤—è–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç-–∫–µ–π—Å—ã —Å —Ç–µ—Å—Ç-–ø–ª–∞–Ω–æ–º...');
      
      for (const testCase of testCasesResult.rows) {
        if (!testCase.test_plan_id) {
          console.log(`  üìù –°–≤—è–∑—ã–≤–∞–µ–º –∫–µ–π—Å "${testCase.title}" —Å –ø–ª–∞–Ω–æ–º`);
          await pool.query(
            'UPDATE test_cases SET test_plan_id = $1 WHERE id = $2',
            [testPlanId, testCase.id]
          );
        }
      }
      
      console.log('‚úÖ –¢–µ—Å—Ç-–∫–µ–π—Å—ã —Å–≤—è–∑–∞–Ω—ã —Å –ø–ª–∞–Ω–æ–º');
    }
    
    // 6. –ï—Å–ª–∏ –Ω–µ—Ç —Ä–∞–∑–¥–µ–ª–æ–≤, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–∞–∑–¥–µ–ª—ã
    if (sectionsResult.rows.length === 0) {
      console.log('üìÇ –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–∞–∑–¥–µ–ª—ã...');
      
      const basicSections = [
        { name: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', order_index: 1 },
        { name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', order_index: 2 },
        { name: '–°–∏—Å—Ç–µ–º–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', order_index: 3 },
        { name: '–ü—Ä–∏–µ–º–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', order_index: 4 }
      ];
      
      for (const section of basicSections) {
        await pool.query(
          `INSERT INTO test_case_sections (project_id, name, order_index, created_at, updated_at)
           VALUES ($1, $2, $3, NOW(), NOW())`,
          [projectId, section.name, section.order_index]
        );
        console.log(`  üìÅ –°–æ–∑–¥–∞–Ω —Ä–∞–∑–¥–µ–ª: ${section.name}`);
      }
      
      console.log('‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ä–∞–∑–¥–µ–ª—ã —Å–æ–∑–¥–∞–Ω—ã');
    }
    
    // 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:');
    
    const finalTestCasesResult = await pool.query(
      'SELECT id, title, test_plan_id FROM test_cases WHERE test_plan_id = $1 AND is_deleted = FALSE',
      [testPlanId]
    );
    console.log('üß™ –¢–µ—Å—Ç-–∫–µ–π—Å—ã –≤ –ø–ª–∞–Ω–µ:', finalTestCasesResult.rows.length);
    
    const finalSectionsResult = await pool.query(
      'SELECT id, name FROM test_case_sections WHERE project_id = $1',
      [projectId]
    );
    console.log('üìÇ –†–∞–∑–¥–µ–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ:', finalSectionsResult.rows.length);
    
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await pool.end();
  }
}

fixTestData(); 